<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
use MichaelNabil230\MultiTenancy\MultiTenancy;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('tenants', function (Blueprint $table) {
            $table->uuid('id')->primary();

            if (MultiTenancy::subscriptionEnable()) {
                $table->timestamp('trial_ends_at')->nullable();
            }

            $table->json('data')->nullable();
            $table->foreignIdFor(MultiTenancy::ownerModel(), 'owner_id')->constrained(MultiTenancy::owner()->getTable())->cascadeOnDelete();
            $table->timestamps();
        });

        Schema::create('domains', function (Blueprint $table) {
            $table->id();
            $table->string('domain')->unique();
            $table->boolean('is_premium')->default(false);
            $table->boolean('is_verified')->default(false);
            $table->foreignUuid('tenant_id')->constrained()->cascadeOnDelete()->cascadeOnUpdate();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('tenants');
        Schema::dropIfExists('domains');
    }
};
